async = modifier yang mengeksekusi semua code tanpa saling menunggu
sync = modifier yang mengeksekusi semua code tapi urut dari atas ke bawah, jadi jika yang dia atas belum selesai maka yang dibawah menunggu

Future (menurut pandangan saya setelah mengamati video)= 
Merupakan tipe data dinamis (tapi bisa dispesifikan, seperti Map) dari suatu method yang akan menjadi 
nyata hasilnya (string/int/dkk) setelah metod yang menggunakan Future tersebut sselesai dijalankan. 
Metod yang menggunakan future harus mereturn suatu nilai.
(JUGA)-Merupakan Class yang digunakan untuk mewakili kejadian yang akan terjadi di suatu waktu yang akan datang
-Future ini termasuk async, sehingga sesuatu yang menggunakan Future, code dibawahnya tidak harus menunggu
setelah Future ini tereksekusi, namun jika ingin kode dibawahnya menunggu maka harus menggunakan await

await = digunakan dengan async, fungsinya agar kode dibawahnya menunggu kode yang memakai await selesai dijalankan, jadi seperti sync

NAH async, await, dan Future ini biasa dikolaborasikan bersama jika kita menggunakan async.

Contoh program :
import 'dart:io';

//penerapan async, await dan future

void main() {
  performTasks();
}

void performTasks()  {
   task1();
  //  String task2Result = task2();
   print(task2());
  //  task3(task2Result)
}

void task1() {
  // String result = 'task 1 data';
  print('Task 1 complete');
}

Future<String> task2() async  { //jika tidak di spefikasikan <String> maka Futurenya dinamis
  Duration threeSeconds = Duration(seconds: 3);
  //sleep(threeSeconds);  //sleep termasuk ke sync

  String result;

  await Future.delayed(threeSeconds, (){  //method Future termasuk async, sehingga kodingan akan terus kontinue tanpa harus menunggu kodingan ini
    result = 'task 2 data';
    print('Task 2 complete');
  });

  return result;
}

void task3() {
//  String result = 'task 3 data';
  print('Task 3 complete');
}

output: 
Task 1 complete
Instance of 'Future<String>'    //disini nunggu 3 detik dulu
Task 2 complete                 //setelah 3 detik, lalu ini muncul
